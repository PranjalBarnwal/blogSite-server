// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String  @id @default(uuid())
  username         String  @unique
  email            String  @unique
  password         String
  profileImg       String? @default("empty")
  bio              String? @default("Preparing for interviews")
  social           String?
  securityQuestion String?
  securityAns      String?
  posts            Post[]
  Vote             Vote[]
}

model Post {
  id          String   @id @default(uuid())
  title       String
  content     String
  publishedAt DateTime @default(now())
  updatedAt   DateTime @default(now())
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  tags        String[]
  readtime    Int
  views       Int      @default(0)
  isAnonymous Boolean  @default(false)
  Vote        Vote[]
}

enum VoteType {
  upvote
  downvote
}

model Vote {
  id       String   @id @default(uuid())
  postId   String
  userId   String
  voteType VoteType
  post     Post     @relation(fields: [postId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
}
